apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
    name: apispec-catalog
    title: Template to catalog API specifications
    description: This template can be used for cataloging all API specifications. Specs are stored in a Git repository 
spec:
    owner: janus-authors
    system: janus-idp
    type: service

    parameters:
    - title: Provide information about API
      required:
      - name
      - spec
      - owner
      properties:
        name:
          title: Name
          type: string
          description: API Name
        description:
          title: Description
          type: string
          description: API Description
        spec:
          title: Specification
          type: string
          description: API Specification
          ui:widget: textarea
          ui:options:
            rows: 10
          ui:help: 'Paste the contents of your OpenAPI sepecification'
          ui:placeholder: |
            ---  
          #format: data-url
          #ui:options:
          #  accept:
          #  - .yaml
          #  - .yml
          #  - .json
        owner:
          title: Owner
          type: string
          description: API Owner
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: [User, Group]

    - title: Provide information about Git Repo
      required:
      - repoUrl
      - reviewers
      - pr_branch
      properties:
        repoUrl:
          title: Repository Url
          type: string
          description: Repository where the api specifications are stored
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
            - github.com
        reviewers:
          title: Reviewers
          type: array
          items:
            type: string
            ui:field: EntityPicker
            ui:options:
              catalogFilter:
                kind: [User, Group]
          uniqueItems: true
          description: Select list of users that need to review this API specification
        pr_branch:
          title: PR branch
          type: string
          description: Pull Request Branch

    steps:
    # fetch repo      
    - id: fetch-repo
      name: fetch repo
      action: fetch:plain
      input:
        url: ${{ parameters.repoUrl }}
    
    # add API
    - id: apiSpecTemplate
      name: Add API specification
      action: fetch:template
      input:
        targetPath: openapi
        url: ./skeleton
        values:
          spec: ${{ parameters.spec }}
    
    - id: renameSpectFile
      name: rename spec
      action: fs:rename
      input:
        files:
        - from: openapi/spec.yaml
          to: openapi/${{ parameters.name}}-oas.yaml
          overwrite: true

    # add API entity
    - id: catalogTemplate
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        targetPath: openapi
        url: ../../skeletons/catalog-info/
        values:
          entityKind: API
          componentName: ${{ parameters.name }}
          applicationType: openapi
          description: ${{ parameters.description }}
          lifecycle: experimental
          owner: ${{ parameters.owner }}
          definition: ${{ parameters.name}}-oas.yaml
    
    # rename catalog-info file
    - id: renameCatalogInfo
      name: rename catalog info
      action: fs:rename
      input:
        files:
        - from: openapi/catalog-info.yaml
          to: openapi/${{ parameters.name }}-api.yaml
    
    - id: addTarget
      name: Add target 
      action: roadiehq:utils:merge
      input:
        path: all-apis.yaml
        content: >
          - ./openapi/${{ parameters.name}}-api.yaml

    # Open pull request
    - id: open-pr
      name: Open pull request
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: ${{ parameters.pr_branch }}
        title: 'Add ${{ parameters.name }}'
        description: 'Pull request created by Backstage scaffolder'
        reviewers: ${{ parameters.reviewers }}
    
    output:
      links:
      - title: PR Url
        url: ${{ steps["open-pr"].output.remoteUrl }}